import arcade
import random

# Constants
WINDOW_WIDTH = 1280
WINDOW_HEIGHT = 720
WINDOW_TITLE = "Star Collection"
PLAYER_MOVEMENT_SPEED = 5
STAR_COUNT = 50


class MyGame(arcade.Window):
    def __init__(self):
        super().__init__(WINDOW_WIDTH, WINDOW_HEIGHT, WINDOW_TITLE)
        self.background_color = arcade.csscolor.CORNFLOWER_BLUE
        self.player_list = None
        self.player_sprite = None
        self.star_list = None
        self.score = 0

    def setup(self):
        self.player_list = arcade.SpriteList()
        self.star_list = arcade.SpriteList()
        self.player_texture = arcade.load_texture(
            ":resources:images/animated_characters/female_adventurer/femaleAdventurer_idle.png"
        )
        self.player_sprite = arcade.Sprite(self.player_texture)
        self.player_sprite.center_x = WINDOW_WIDTH / 2
        self.player_sprite.center_y = WINDOW_HEIGHT / 2
        self.player_list.append(self.player_sprite)
        for i in range(STAR_COUNT):
            star = arcade.Sprite(":resources:images/items/star.png", 0.2)
            star.center_x = random.randrange(WINDOW_WIDTH)
            star.center_y = random.randrange(WINDOW_HEIGHT)
            self.star_list.append(star)
        self.score = 0
        self.game_over = False

    def on_draw(self):
        self.clear()
        self.star_list.draw()
        self.player_list.draw()
        output = f"Score: {self.score}"
        arcade.draw_text(output, 10, 20, arcade.color.WHITE, 14)
        if self.game_over:
            arcade.draw_text(
                "YOU WIN!",
                WINDOW_WIDTH / 2,
                WINDOW_HEIGHT / 2,
                arcade.csscolor.WHITE,
                font_size=50,
                anchor_x="center",
            )

    def on_update(self, delta_time):
        self.player_list.update()
        self.star_list.update()
        star_hit_list = arcade.check_for_collision_with_list(
            self.player_sprite, self.star_list
        )
        if not self.game_over:
            self.player_list.update()
        for star in star_hit_list:
            star.remove_from_sprite_lists()
            self.score += 1
            if len(self.star_list) == 0:
                self.game_over = True

    def on_key_press(self, key, modifiers):
        if key == arcade.key.UP or key == arcade.key.W:
            self.player_sprite.change_y = PLAYER_MOVEMENT_SPEED
        elif key == arcade.key.DOWN or key == arcade.key.S:
            self.player_sprite.change_y = -PLAYER_MOVEMENT_SPEED
        elif key == arcade.key.LEFT or key == arcade.key.A:
            self.player_sprite.change_x = -PLAYER_MOVEMENT_SPEED
        elif key == arcade.key.RIGHT or key == arcade.key.D:
            self.player_sprite.change_x = PLAYER_MOVEMENT_SPEED

    def on_key_release(self, key, modifiers):

        if key == arcade.key.UP or key == arcade.key.W:
            self.player_sprite.change_y = 0
        elif key == arcade.key.DOWN or key == arcade.key.S:
            self.player_sprite.change_y = 0
        elif key == arcade.key.LEFT or key == arcade.key.A:
            self.player_sprite.change_x = 0
        elif key == arcade.key.RIGHT or key == arcade.key.D:
            self.player_sprite.change_x = 0


def main():
    window = MyGame()
    window.setup()
    arcade.run()


if __name__ == "__main__":
    main()
